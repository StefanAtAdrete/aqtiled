<?php

/**
 * @file
 * Contains install, update and uninstall hooks.
 */

/**
 * Update configuration keys.
 */
function cookiebot_update_8001() {
  $config = \Drupal::configFactory()->getEditable('cookiebot.settings');
  $config->set('cookiebot_show_declaration', $config->get('cookiebot_allow_declaration'));
  $config->clear('cookiebot_allow_declaration');
  $config->set('cookiebot_show_declaration_node_id', $config->get('cookiebot_declaration_path'));
  $config->clear('cookiebot_declaration_path');
  $config->save();
}

/**
 * Update configuration keys.
 */
function cookiebot_update_8002() {
  $config = \Drupal::configFactory()->getEditable('cookiebot.settings');
  $config->set('cookiebot_show_declaration_node_path', $config->get('cookiebot_show_declaration_node_id'));
  $config->clear('cookiebot_show_declaration_node_id');
  $config->save();
}

/**
 * Update configuration keys and migrate declaration_node_path to language-agnostic declaration_node.
 */
function cookiebot_update_8003() {
  $config = \Drupal::configFactory()->getEditable('cookiebot.settings');
  $declaration_node_path = $config->get('cookiebot_show_declaration_node_path');

  // Exit early if the configuration node path is not set.
  if (empty($declaration_node_path)) {
    return;
  }

  $path = \Drupal::service('path_alias.manager')->getPathByAlias($declaration_node_path);
  preg_match('/node\/(\d+)/', $path, $matches);

  // Exit if we have no matches.
  if (empty($matches) || empty($matches[1])) {
    return;
  }
  $node = \Drupal::entityTypeManager()->getStorage('node')->load($matches[1]);
  $config->set('cookiebot_show_declaration_node', $node->id());
  $config->clear('cookiebot_show_declaration_node_path');
  $config->save();
}

/**
 * Update configuration keys.
 */
function cookiebot_update_8004() {
  $config = \Drupal::configFactory()->getEditable('cookiebot.settings');

  // Only set this if we have no value.
  if (is_null($config->get('cookiebot_drupal_culture'))) {
    $config->set('cookiebot_drupal_culture', FALSE);
  }

  // Set default value to false.
  $config->set('cookiebot_disable_async_loading', FALSE);
  $config->save();
}
